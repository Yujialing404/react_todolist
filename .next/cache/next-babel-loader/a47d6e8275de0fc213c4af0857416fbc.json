{"ast":null,"code":"var _jsxFileName = \"F:\\\\Front End\\\\react\\\\todolist\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport { useState, useCallback, useEffect } from 'react';\nimport React, { Fragment } from 'react';\n\nfunction TodoList() {\n  const {\n    0: inputValue,\n    1: inputChange\n  } = useState('');\n  const {\n    0: data,\n    1: listchange\n  } = useState([]);\n\n  function onSubmit() {\n    listchange([...data, inputValue]);\n  }\n\n  function remove(index) {\n    /* data.splice(index,1);\r\n    listchange(data) */\n    console.log(data.splice(index, 1));\n  }\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    onChange: e => inputChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: () => {\n      onSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Submit\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, data.map((value, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, __jsx(\"button\", {\n      onClick: () => {\n        remove(index);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }, \"Remove\"), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, value));\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["F:/Front End/react/todolist/pages/index.js"],"names":["useState","useCallback","useEffect","React","Fragment","TodoList","inputValue","inputChange","data","listchange","onSubmit","remove","index","console","log","splice","e","target","value","map"],"mappings":";;AAAA,SAASA,QAAT,EAAoBC,WAApB,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA+B,OAA/B;;AACA,SAASC,QAAT,GAAoB;AAChB,QAAM;AAAA,OAACC,UAAD;AAAA,OAAYC;AAAZ,MAA2BP,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM;AAAA,OAACQ,IAAD;AAAA,OAAOC;AAAP,MAAqBT,QAAQ,CAAC,EAAD,CAAnC;;AAEA,WAASU,QAAT,GAAmB;AACfD,IAAAA,UAAU,CAAC,CAAC,GAAGD,IAAJ,EAASF,UAAT,CAAD,CAAV;AACH;;AACD,WAASK,MAAT,CAAgBC,KAAhB,EAAsB;AAClB;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,MAAL,CAAYH,KAAZ,EAAkB,CAAlB,CAAZ;AACH;;AACD,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAO,IAAA,QAAQ,EAAEI,CAAC,IAAIT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,EAEM;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACR,MAAAA,QAAQ;AAAG,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFN,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACW,GAAL,CAAS,CAACD,KAAD,EAAON,KAAP,KAAiB;AACvB,WACI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACD,QAAAA,MAAM,CAACC,KAAD,CAAN;AAAc,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKM,KAAL,CAFJ,CADJ;AAMH,GAPA,CADL,CAHN,CADF;AAgBD;;AACH,eAAeb,QAAf","sourcesContent":["import { useState , useCallback , useEffect} from 'react';\r\nimport React,{ Fragment } from 'react';\r\nfunction TodoList() {\r\n    const [inputValue,inputChange] = useState('')\r\n    const [data, listchange] = useState([])\r\n\r\n    function onSubmit(){\r\n        listchange([...data,inputValue])\r\n    }\r\n    function remove(index){\r\n        /* data.splice(index,1);\r\n        listchange(data) */\r\n        console.log(data.splice(index,1))\r\n    }\r\n    return (\r\n      <Fragment>\r\n            <input onChange={e => inputChange(e.target.value)} />\r\n            <button onClick={() => {onSubmit()}}>Submit</button>\r\n            <ul>\r\n                {data.map((value,index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <button onClick={() => {remove(index)} }>Remove</button>\r\n                            <li>{value}</li>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </ul>\r\n      </Fragment>\r\n    )\r\n  }\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}